version: '3.9'

services:
  database:
    container_name: eve_database
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./database/Dockerfile
    env_file:
      - ./.env
    networks:
      - network
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
  migrate:
    container_name: eve_migrate
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./migrate/Dockerfile
      args:
        with_dev_dependencies: true
    env_file:
      - ./.env
    networks:
      - network
    volumes:
      - ./migrate:/eve/migrate
      - ./common:/eve/common
      - /eve/node_modules
    depends_on:
      database:
        condition: service_healthy
    command: ['npm', 'run', 'watch', '--workspace=migrate']
  worker:
    container_name: eve_worker
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    env_file:
      - ./.env
    networks:
      - network
    volumes:
      - ./worker:/eve/worker
      - ./common:/eve/common
      - /eve/node_modules
    depends_on:
      database:
        condition: service_healthy
    command: ['npm', 'run', 'watch', '--workspace=worker']
  graphql:
    container_name: eve_graphql
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./graphql/Dockerfile
    env_file:
      - ./.env
    networks:
      - network
    ports:
      - 5433:5433
    volumes:
      - ./graphql:/eve/graphql
      - ./common:/eve/common
      - /eve/node_modules
    depends_on:
      database:
        condition: service_healthy
    command: ['npm', 'run', 'dev', '--workspace=graphql']
  client:
    container_name: eve_client
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./client/Dockerfile
      args:
        - GRAPHQL_URL
    env_file:
      - ./.env
    networks:
      - network
    ports:
      - 3000:3000
    volumes:
      - /eve/node_modules
      - /eve/client/.next
      - ./client:/eve/client
      - ./common:/eve/common
    command: ['npm', 'run', 'dev', '--workspace=client']
    depends_on:
      graphql:
        condition: service_healthy

networks:
  network:

volumes:
  database:
